{"version":3,"sources":["context/hooks.ts","api/api.ts","common/hooks.ts","context/Context.tsx","common/history.ts","components/button/Button.tsx","components/icons/Spinner.tsx","components/inputField/InputField.tsx","components/wallPost/WallPost.tsx","components/wallColumn/WallColumn.tsx","screens/wallPage/utils.ts","common/utils.ts","common/routingConfig.tsx","screens/wallPage/WallPage.tsx","screens/postPage/PostPage.tsx","layout/Layout.tsx","components/errorDialog/ErrorDialog.tsx","components/errorMessage/ErrorMessage.tsx","screens/loginPage/LoginPage.tsx","screens/loginPage/utils.ts","App/App.tsx","index.tsx"],"names":["useFetchPosts","searchQuery","useState","posts","setPosts","postId","setPostId","shouldRun","setShouldRun","setError","useInterval","axios","get","fetchPost","then","post","data","catch","e","callback","delay","prevCallback","useRef","useEffect","current","intervalId","setInterval","clearInterval","useSessionStorage","key","window","sessionStorage","getItem","state","setState","setItem","Context","React","userId","id","title","body","userData","username","setSearchQuery","ContextProvider","children","value","Provider","history","createBrowserHistory","Button","label","type","onClick","disabled","appearance","className","Spinner","height","width","color","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","InputField","onChange","placeholder","hasError","htmlFor","WallPost","pathname","location","push","WallColumn","isFiltering","length","map","sort","col1","col2","col3","forEach","index","initialSortedPosts","clearUserData","keys","routingConfig","path","exact","component","match","params","Error","sortedPosts","setSortedPosts","context","filteredPosts","filter","includes","target","props","numberifiedId","parseInt","find","replace","Layout","ErrorDialog","error","resetErrorBoundary","message","ErrorMessage","initialErrorsState","password","LoginPage","setName","setPassword","errors","setErrors","handleChange","setter","onSubmit","preventDefault","err","hasUppercaseLetter","hasNumber","validate","idx","App","FallbackComponent","page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd6815b4.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nimport { PostResponse } from './types'\nimport { Post } from 'api'\nimport { fetchPost } from 'api'\n\nconst initialPostId = 1\nconst MAX_POSTS_NUMBER = 100\n\nexport const useFetchPosts = (searchQuery: string): Post[] => {\n  const [posts, setPosts] = useState<Post[]>([])\n  const [postId, setPostId] = useState(initialPostId)\n  const [shouldRun, setShouldRun] = useState<boolean>(true)\n  const [, setError] = useState(null)\n\n  const isFiltering = searchQuery !== ''\n\n  useInterval(\n    () => {\n      fetchPost(postId)\n        .then((post: PostResponse) => {\n          setPosts([...posts, post.data])\n          setPostId(postId + 1)\n        })\n        .catch(e => {\n          setShouldRun(false)\n\n          //hack to make error boundary catch the error from custom hook - couldt figure out  a better way\n          setError(() => {\n            throw e\n          })\n        })\n    },\n    //todo figure out other way to stop fetching posts after last one is fetched\n    shouldRun && !isFiltering && postId <= MAX_POSTS_NUMBER ? 1000 : null,\n  )\n\n  // console.log(posts, 123)\n  return posts\n}\n\nconst useInterval = (callback: () => void, delay: number | null) => {\n  const prevCallback = useRef<() => void | null>()\n\n  // remember the latest callback\n  useEffect(() => {\n    prevCallback.current = callback\n  })\n\n  // set up the interval\n  useEffect(() => {\n    const tick = () => {\n      if (typeof prevCallback?.current !== 'undefined') {\n        prevCallback?.current()\n      }\n    }\n\n    if (delay !== null) {\n      const intervalId = setInterval(tick, delay)\n      return () => clearInterval(intervalId)\n    }\n  }, [delay])\n}\n","import axios from 'axios'\n\nimport { Post } from './types'\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/posts'\n\nexport const fetchPost = (postId: number) =>\n  axios.get<Post>(`${BASE_URL}/${postId}`)\n","import { useState, useEffect } from 'react'\nimport { UseSessionStorage } from './types'\n\nexport const useSessionStorage = (key: string) => {\n  const [state, setState] = useState(\n    () => window.sessionStorage.getItem(key) || '',\n  )\n\n  useEffect(() => {\n    window.sessionStorage.setItem(key, state)\n  }, [key, state])\n\n  return [state, setState] as UseSessionStorage\n}\n","import * as React from 'react'\n\nimport { useFetchPosts } from 'context/hooks'\nimport { useSessionStorage } from 'common/hooks'\nimport { Post } from 'api'\n\nconst mockData = [\n  {\n    userId: 1,\n    id: 1,\n    title:\n      'sunt aut facere repellat provident occaecati excepturi optio reprehenderit',\n    body:\n      'quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto',\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'qui est esse',\n    body:\n      'est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla',\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: 'ea molestias quasi exercitationem repellat qui ipsa sit aut',\n    body:\n      'et iusto sed quo iure voluptatem occaecati omnis eligendi aut ad voluptatem doloribus vel accusantium quis pariatur molestiae porro eius odio et labore et velit aut',\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: 'eum et est occaecati',\n    body:\n      'ullam et saepe reiciendis voluptatem adipisci sit amet autem assumenda provident rerum culpa quis hic commodi nesciunt rem tenetur doloremque ipsam iure quis sunt voluptatem rerum illo velit',\n  },\n  {\n    userId: 1,\n    id: 5,\n    title: 'nesciunt quas odio',\n    body:\n      'repudiandae veniam quaerat sunt sed alias aut fugiat sit autem sed est voluptatem omnis possimus esse voluptatibus quis est aut tenetur dolor neque',\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: 'dolorem eum magni eos aperiam quia',\n    body:\n      'ut aspernatur corporis harum nihil quis provident sequi mollitia nobis aliquid molestiae perspiciatis et ea nemo ab reprehenderit accusantium quas voluptate dolores velit et doloremque molestiae',\n  },\n  {\n    userId: 1,\n    id: 7,\n    title: 'magnam facilis autem',\n    body:\n      'dolore placeat quibusdam ea quo vitae magni quis enim qui quis quo nemo aut saepe quidem repellat excepturi ut quia sunt ut sequi eos ea sed quas',\n  },\n  {\n    userId: 1,\n    id: 8,\n    title: 'dolorem dolore est ipsam',\n    body:\n      'dignissimos aperiam dolorem qui eum facilis quibusdam animi sint suscipit qui sint possimus cum quaerat magni maiores excepturi ipsam ut commodi dolor voluptatum modi aut vitae',\n  },\n  {\n    userId: 1,\n    id: 9,\n    title: 'nesciunt iure omnis dolorem tempora et accusantium',\n    body:\n      'consectetur animi nesciunt iure dolore enim quia ad veniam autem ut quam aut nobis et est aut quod aut provident voluptas autem voluptas',\n  },\n  {\n    userId: 1,\n    id: 10,\n    title: 'optio molestias id quia eum',\n    body:\n      'quo et expedita modi cum officia vel magni doloribus qui repudiandae vero nisi sit quos veniam quod sed accusamus veritatis error',\n  },\n]\nexport const Context = React.createContext({\n  posts: mockData,\n  userData: {\n    username: '',\n  },\n  setSearchQuery: (searchQuery: string) => ({}),\n  searchQuery: '',\n})\n\ninterface Props {\n  children: JSX.Element | JSX.Element[]\n}\n\ninterface ContextValue {\n  userData: {\n    username: string\n  }\n  posts: Post[]\n  searchQuery: string\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const ContextProvider: React.FC<Props> = ({ children }) => {\n  const [searchQuery, setSearchQuery] = React.useState<string>('')\n\n  const [username] = useSessionStorage('username')\n  const userData = { username }\n  const posts = useFetchPosts(searchQuery)\n\n  const value: ContextValue = { posts, userData, searchQuery, setSearchQuery }\n\n  //@ts-ignore\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n","import { createBrowserHistory, History } from 'history'\n\nconst history: History = createBrowserHistory()\n\nexport { history }\n","import * as React from 'react'\n\nimport './Button.scss'\n\ninterface Props {\n  label: string\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void\n  type?: 'button' | 'submit' | 'reset'\n  disabled?: boolean\n  appearance?: 'regular' | 'long'\n}\n\nexport const Button: React.FC<Props> = ({\n  label,\n  type = 'button',\n  onClick,\n  disabled,\n  appearance = 'regular',\n}) => {\n  return (\n    <button\n      className={`btn btn--${appearance}`}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  )\n}\n","import React from 'react'\n\nexport const Spinner = ({\n  height = '24px',\n  width = '24px',\n  color = 'black',\n}: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox='0 0 100 100'\n    preserveAspectRatio='xMidYMid'\n  >\n    <circle\n      cx='50'\n      cy='50'\n      fill='none'\n      stroke={color}\n      strokeWidth='10'\n      r='36'\n      strokeDasharray='169.64600329384882 58.548667764616276'\n    >\n      <animateTransform\n        attributeName='transform'\n        type='rotate'\n        calcMode='linear'\n        values='0 50 50;360 50 50'\n        keyTimes='0;1'\n        dur='1s'\n        begin='0s'\n        repeatCount='indefinite'\n      />\n    </circle>\n  </svg>\n)\n","import * as React from 'react'\n\nimport './InputField.scss'\n\ninterface Props {\n  value: string\n  id: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  label?: string\n  placeholder?: string\n  hasError?: boolean\n}\n\nexport const InputField: React.FC<Props> = ({\n  label,\n  value,\n  id,\n  onChange,\n  placeholder,\n  hasError,\n}) => (\n  <div className='input-field'>\n    {label && (\n      <label className='input-field__label' htmlFor={id}>\n        {label}\n      </label>\n    )}\n    <input\n      id={id}\n      placeholder={placeholder}\n      onChange={onChange}\n      value={value}\n      className={`input-field__input ${hasError ? 'error' : ''}`}\n    />\n  </div>\n)\n","import * as React from 'react'\n\nimport { history } from 'common/history'\nimport { Post } from 'api'\nimport './WallPost.scss'\n\ninterface Props {\n  post: Post\n}\n\nexport const WallPost: React.FC<Props> = ({ post }) => {\n  const pathname = history.location.pathname\n  const navigateToPost = () => history.push(`${pathname}/${post.id}`)\n\n  return (\n    <div className='post' onClick={navigateToPost}>\n      <p className='post__user-id'>UserId: {post.userId}</p>\n      <p className='post__title'>Title: {post.title}</p>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { Post } from 'api'\nimport { WallPost } from 'components/wallPost'\nimport { Spinner } from 'components/icons'\nimport { Context } from 'context'\n\nimport './WallColumn.scss'\n\ninterface Props {\n  posts: Post[]\n}\n\nexport const WallColumn: React.FC<Props> = ({ posts }) => {\n  const context = React.useContext(Context)\n  const { searchQuery } = context\n  const isFiltering = searchQuery !== ''\n\n  return (\n    <div className='column'>\n      {!posts.length && isFiltering && (\n        <div className='column__loading'>\n          <p className='column__info'>Nothing to display.</p>\n        </div>\n      )}\n\n      {!posts.length && !isFiltering && (\n        <div className='column__loading'>\n          <Spinner color='#25282b' height='100' width='100' />{' '}\n        </div>\n      )}\n\n      {posts.map(post => {\n        return <WallPost key={post.id} post={post} />\n      })}\n    </div>\n  )\n}\n","import { Post } from 'api'\nimport { GroupedPosts } from './types'\n\nexport const sort = (posts: Post[]): GroupedPosts => {\n  const col1: Post[] = []\n  const col2: Post[] = []\n  const col3: Post[] = []\n\n  posts.forEach((post: Post, index: number) => {\n    if (!posts.length) {\n      return\n    }\n\n    if (index % 3 === 1) {\n      col2.push(post)\n    }\n\n    if (index % 3 === 0) {\n      col1.push(post)\n    }\n\n    if (index % 3 === 2) {\n      col3.push(post)\n    }\n  })\n\n  return { col1, col3, col2 }\n}\n\nexport const filter = (posts: Post[], searchQuery: string): GroupedPosts => {\n  const filteredPosts = posts.filter(\n    post => post.title.includes(searchQuery) || post.body.includes(searchQuery),\n  )\n\n  return sort(filteredPosts)\n}\n\nexport const initialSortedPosts = {\n  col1: [],\n  col2: [],\n  col3: [],\n}\n","export const clearUserData = (keys: string[]) => {\n  keys.forEach((key: string) => {\n    window.sessionStorage.setItem(key, '')\n  })\n}\n","import { PostPage } from 'screens/postPage'\nimport { WallPage } from 'screens/wallPage'\n\nimport { RoutingConfig } from './types'\n\nexport const routingConfig: RoutingConfig = [\n  {\n    path: '/wall/:username',\n    id: 'wall',\n    exact: true,\n    component: WallPage,\n  },\n  {\n    path: '/wall/:username/:postId',\n    id: 'post',\n    exact: true,\n    component: PostPage,\n  },\n]\n","import * as React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { Button } from 'components/button'\nimport { InputField } from 'components/inputField'\nimport { WallColumn } from 'components/wallColumn'\n\nimport { history } from 'common/history'\nimport { Context } from 'context'\nimport { sort, filter, initialSortedPosts } from './utils'\nimport { clearUserData } from 'common/utils'\nimport { useSessionStorage } from 'common/hooks'\n\nimport { GroupedPosts } from './types'\nimport { MatchParams } from 'common/types'\n\nimport './WallPage.scss'\n\nexport const WallPage: React.FC<RouteComponentProps<MatchParams>> = ({\n  match,\n}) => {\n  const [username] = useSessionStorage('username')\n\n  if (username !== match.params.username) {\n    throw new Error(\n      `User ${match.params.username} is not logged in. Please go to login page.`,\n    )\n  }\n\n  const [sortedPosts, setSortedPosts] = React.useState<GroupedPosts>(\n    initialSortedPosts,\n  )\n\n  const context = React.useContext(Context)\n\n  const { posts, searchQuery, setSearchQuery } = context\n\n  React.useEffect(() => {\n    if (searchQuery !== '') {\n      setSortedPosts(filter(posts, searchQuery))\n    }\n  }, [searchQuery, posts])\n\n  React.useEffect(() => {\n    setSortedPosts(sort(posts))\n  }, [posts])\n\n  const onLogout = () => {\n    clearUserData(['username', 'password'])\n    history.push('/')\n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value)\n  }\n\n  return (\n    <div className='wall page-container'>\n      <nav className='wall__nav'>\n        <Button label='Logout' type='button' onClick={onLogout} />\n        <InputField\n          placeholder='Search'\n          value={searchQuery}\n          id='search'\n          onChange={handleChange}\n        />\n      </nav>\n      <main className='wall__main'>\n        <WallColumn posts={sortedPosts.col1} />\n        <WallColumn posts={sortedPosts.col2} />\n        <WallColumn posts={sortedPosts.col3} />\n      </main>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { history } from 'common/history'\nimport { Button } from 'components/button'\nimport { Context } from 'context'\nimport { Spinner } from 'components/icons'\nimport { MatchParams } from 'common/types'\n\nimport { Post } from 'api'\n\nimport './PostPage.scss'\n\ninterface Props {\n  post: Post\n}\n\nexport const PostPage: React.FC<\n  Props & RouteComponentProps<MatchParams>\n> = props => {\n  const context = React.useContext(Context)\n  const posts = context.posts\n  const { username, postId } = props.match.params\n\n  const numberifiedId = parseInt(postId)\n\n  const post = posts.find(post => post.id === numberifiedId)\n\n  const navigateToWall = () => history.replace(`/wall/${username}`)\n\n  return (\n    <div className='post-page page-container'>\n      <Button label='Go Back' appearance='long' onClick={navigateToWall} />\n\n      {post ? (\n        <>\n          <div className='post-page__heading'>\n            <h2>Details</h2>\n          </div>\n          <div className='post-page__description'>\n            <p>User id: 1</p>\n            <p>Id: user123</p>\n            <p>\n              Title: <span>blah blah blah</span>\n            </p>\n          </div>\n          <div className='post-page__text'>\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Adipisci\n            voluptatum pariatur, ab enim praesentium ut repellat. Mollitia\n            facere quis exercitationem adipisci, omnis quisquam quos eum sint,\n            natus dolore ex quaerat. Lorem ipsum dolor sit, amet consectetur\n            adipisicing elit. Nisi, magni ipsum incidunt quisquam, ducimus\n            adipisci voluptatem minus omnis aut, molestias ipsa aliquam?\n            Distinctio quo, ducimus repellendus inventore reprehenderit rem\n            neque?\n          </div>\n        </>\n      ) : (\n        <>\n          <div className='post-page__heading'>\n            <h2>Loading...</h2>\n          </div>\n          <div className='column__loading'>\n            <Spinner color=' #dfdfe1' height='100' width='100' />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport './Layout.scss'\n\ninterface Props {\n  children: React.ReactChild\n}\n\nexport const Layout: React.FC<Props> = ({ children }) => (\n  <div className='layout'>{children}</div>\n)\n","import * as React from 'react'\nimport { FallbackProps } from 'react-error-boundary'\n\nimport { Button } from 'components/button'\n\nimport { clearUserData } from 'common/utils'\nimport { history } from 'common/history'\n\nimport './ErrorDialog.scss'\n\nexport const ErrorDialog: React.ComponentType<FallbackProps> = ({\n  error,\n  resetErrorBoundary,\n}) => {\n  const goToLoginHandler = (): void => {\n    clearUserData(['username', 'password'])\n    history.replace('/')\n  }\n\n  return (\n    <div className='error-fallback'>\n      <div className='error-fallback__overlay'>\n        <div className='error-fallback__dialog'>\n          <div className='error-fallback__content'>\n            There was an error: <pre>{error.message}</pre>\n          </div>\n          <div className='error-fallback__actions'>\n            <Button label='Try again' onClick={resetErrorBoundary} />\n            <Button label='Go to login page' onClick={goToLoginHandler} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport './ErrorMessage.scss'\n\ninterface Props {\n  error: string\n}\n\nexport const ErrorMessage: React.FC<Props> = ({ error }) => {\n  return (\n    <div className='error'>\n      <span>{error}</span>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { history } from 'common/history'\nimport { useSessionStorage } from 'common/hooks'\n\nimport { InputField } from 'components/inputField'\nimport { Button } from 'components/button'\nimport { ErrorMessage } from 'components/errorMessage'\n\nimport { FormErrors } from './types'\n\nimport { validate } from './utils'\n\nimport './LoginPage.scss'\n\nconst initialErrorsState = {\n  username: [],\n  password: [],\n}\n\nexport const LoginPage: React.FC = props => {\n  const [username, setName] = useSessionStorage('username')\n  const [password, setPassword] = useSessionStorage('password')\n  const [errors, setErrors] = React.useState<FormErrors>(initialErrorsState)\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    setter: React.Dispatch<React.SetStateAction<string>>,\n  ): void => {\n    setter(e.target.value)\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n    const err = validate(username, password)\n    setErrors(err)\n\n    if (err.password.length || err.username.length) {\n      return\n    }\n\n    history.push(`/wall/${username}`)\n  }\n\n  return (\n    <div className='login page-container'>\n      <div className='login__form-container'>\n        <form className='login__form' onSubmit={handleSubmit}>\n          <fieldset className='login__fields'>\n            <div className='login__field-group'>\n              <InputField\n                onChange={e => handleChange(e, setName)}\n                label='Username'\n                value={username}\n                id='username'\n                hasError={!!errors.username.length}\n                placeholder='Enter your username'\n              />\n              {errors.username.map((error, idx) => (\n                <ErrorMessage key={idx} error={error} />\n              ))}\n            </div>\n\n            <div className='login__field-group'>\n              <InputField\n                onChange={e => handleChange(e, setPassword)}\n                label='Password'\n                value={password}\n                id='password'\n                hasError={!!errors.password.length}\n                placeholder='Enter your password'\n              />\n              {errors.password.map((error, idx) => (\n                <ErrorMessage key={idx} error={error} />\n              ))}\n            </div>\n          </fieldset>\n          <Button type='submit' label='Login' />\n        </form>\n      </div>\n    </div>\n  )\n}\n","import { FormErrors } from './types'\n\nexport const validate = (username: string, password: string): FormErrors => {\n  const errors: FormErrors = {\n    username: [],\n    password: [],\n  }\n\n  const hasUppercaseLetter = password.match(/[A-Z]/g)?.length\n  const hasNumber = password.match(/[0-9]/g)?.length\n  const minUsernameLength = 5\n  const minPasswordLength = 8\n\n  if (username.length < minUsernameLength) {\n    errors.username.push(\n      `Username must contain at least ${minUsernameLength} characters.`,\n    )\n  }\n\n  if (password.length < minPasswordLength) {\n    errors.password.push(\n      `Password must contain at least ${minUsernameLength} characters.`,\n    )\n  }\n\n  if (!hasUppercaseLetter) {\n    errors.password.push('Password must contain at least 1 upper case letter.')\n  }\n\n  if (!hasNumber) {\n    errors.password.push('Password must contain at least 1 number.')\n  }\n\n  return errors\n}\n","import React from 'react'\nimport { Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { ContextProvider } from 'context'\nimport { routingConfig } from 'common/routingConfig'\nimport { history } from 'common/history'\nimport { Layout } from 'layout'\n\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { ErrorDialog } from 'components/errorDialog'\n// import { NotFound } from 'screens/notFound'\nimport { LoginPage } from 'screens/loginPage'\n\nimport { RouteElement } from 'common/types'\n\nimport './App.css'\n\nexport const App: React.FC = () => (\n  <Layout>\n    <Router history={history}>\n      <Switch>\n        <Route key={'login'} exact path='/' component={LoginPage} />\n        <ErrorBoundary FallbackComponent={ErrorDialog}>\n          <ContextProvider>\n            {routingConfig.map((page: RouteElement) => {\n              const { exact, path, component, id } = page\n              return (\n                <Route\n                  key={id}\n                  exact={exact}\n                  path={path}\n                  component={component}\n                />\n              )\n            })}\n          </ContextProvider>\n        </ErrorBoundary>\n        {/* <Route component={NotFound} /> */}\n      </Switch>\n    </Router>\n  </Layout>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from 'App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}